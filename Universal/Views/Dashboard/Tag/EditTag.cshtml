@model Universal.DTO.IDTO.TagIDTO

@{
	ViewData["Title"] = "Edit Tag";
}

<div class="container bg-light w-50">
	<div class="text-center">
		<h2>Edit Tag</h2>
	</div>
	@using (Html.BeginForm("EditTagModel", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		<div class="form-group mb-3">
			@Html.HiddenFor(model => model.LanguageID,new { @id = "lang" })
		</div>
		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Title, "Tag title:")
			@Html.TextBoxFor(model => model.Title, null, new { @class="form-control", placeholder = "Title"})
			@Html.ValidationMessageFor(model => model.Title, null, new { @class="text-danger" })
		</div>
		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Description, "Tag description:")
			@Html.TextBoxFor(model => model.Description, new { @class="form-control", placeholder = "Description"})
			@Html.ValidationMessageFor(model => model.Description, null, new { @class="text-danger" })
		</div>

		@Html.HiddenFor(model => model.IsImageChanged, new {id = "IsImageChanged"})
		<div class="row">
			<div class="form-group col-10 mb-3">
				@Html.LabelRequiredFor(model => model.TagImage, "Tag Image:", true)
				<input type="file" name="TagImage" runat="server" id="file" class="form-control" onchange="loadFile(event)" />

				@*@Html.ValidationMessageFor(model => model.Avatar, null, new { @class="text-danger" })*@
			</div>
			<div class="form-group col-2 mb-3 text-center">
				<div class="image-container">
					<img src="@Url.Action("GetImage","Dashboard",new {path = Model.Photo})" id="tag-preview" width="75" height="75" style="border: 2px solid indigo">
					<a class="unset-button" id="unset" onclick="unsetImage()" title="Unset Image">x</a>
				</div>
			</div>
		</div>

		@Html.HiddenFor(model => model.TagId)
		<div class="mx-auto mb-3 w-50">
			<input type="submit" value="Save" class="form-control p-2 btn-dotnet" />
		</div>
	}
</div>

@section Scripts{

	<script>
		let loadFile = function (event) {
			let image = document.getElementById('tag-preview');
			image.src = URL.createObjectURL(event.target.files[0]);
			let element = document.getElementById('unset');
			element.classList.add("hover-unset");

		};

		$(document).ready(function () {

			let image = document.getElementById('tag-preview');
			var parts = image.src.split('/');
			var result = parts.slice(3).join('/');
			if (result != "Dashboard/GetImage") {
				let element = document.getElementById('unset');
				element.classList.add("hover-unset");
			}
		});

		function unsetImage(event) {
			let image = document.getElementById('tag-preview');
			image.src = '@Url.Action("GetImage","Dashboard",null)';
			$("#file").val(null);
			var hiddenInput = document.getElementById("IsImageChanged");
			hiddenInput.value = "true";

			let element = document.getElementById('unset');
			element.classList.remove("hover-unset");
			event.preventDefault();
		}

		$('#lang').val($('#language').val());

		$('#language').change(function () {
			$('#lang').val($(this).val());
		});

	</script>
}