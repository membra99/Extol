@model Universal.DTO.ViewDTO.MultiMediaIDTO

@{
	ViewData["Title"] = "Gallery";
}

<style>
	.gallery-container {
		display: flex;
		flex-direction: column;
		padding: 3px;
	}

	.gallery-item {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		background-color: lightsteelblue;
		border-radius: 10px;
		height: 20vh;
		padding: 1px
	}

	/* Style the container */
	.image-container {
		position: relative;
		display: inline-block;
		color: lightslategray;
		padding: 0;
	}

	/* Style the image */
	.image {
		max-width: 100%;
		max-height: 20vh
	}

	.image-title {
		font-size: 12px;
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
	}

	/* Style the overlay (initially hidden) */
	.image-overlay {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.7); /* Backdrop color with opacity */
		opacity: 0; /* Initially hidden */
		display: flex;
		justify-content: center;
		align-items: center;
		border-radius: 10px;
		transition: opacity 0.3s ease; /* Smooth transition on hover */
	}

	/* Style the overlay icons */
	.overlay-icons {
		color: white;
		font-size: 24px;
		display: flex;
		justify-content: space-around;
		align-items: center;
		width: 80px;
	}

	/* Style the icons */
	.edit-icon, .delete-icon {
		cursor: pointer;
		transition: transform 0.2s ease; /* Add a subtle animation on hover */
	}

		/* Hover effect for the icons */
		.edit-icon:hover, .delete-icon:hover {
			transform: scale(1.1); /* Increase the icon size on hover */
		}

	/* Show the overlay on hover */
	.gallery-item:hover .image-overlay {
		opacity: 1;
	}

	@@media (min-width: 1400px) {
		.col-xl-8r {
			width: 12.5%;
			float: left;
		}
	}

	@@media (min-width: 1700px) {
		.col-xxl-12r {
			width: 8.33333333%;
			float: left;
		}

		.image {
			max-height: 15vh;
		}

		.gallery-item {
			height: 15vh;
		}
	}

</style>

<div class="col-12 p-3">
	<div class="row">
		@foreach (var mediaImage in Model.MediaList)
		{
			<div class="gallery-container col-sm-3 col-md-2 col-xl-8r col-xxl-12r">
				<div class="gallery-item">
					<div class="image-container">
						<img src="@Url.Action("GetImage", "Dashboard", new { path = mediaImage.Src })" alt="@mediaImage.AltTitle" class="image" />
					</div>
					<div class="image-overlay">
						<div class="overlay-icons">
							<i class="fas fa-edit edit-icon" data-media-id="@mediaImage.MediaId"></i>
							<i class="fas fa-trash delete-icon" data-media-id="@mediaImage.MediaId" data-media-title="@mediaImage.MetaTitle"></i>
						</div>
					</div>
				</div>
				<span class="text-center image-title">@mediaImage.MetaTitle</span>
			</div>
		}
	</div>
</div>

<div id="edit-image-modal" class="modal fade" tabindex="-1" role="dialog">
	@using (Html.BeginForm("EditMeidaImage", "Dashboard", FormMethod.Post))
	{
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Edit Image Properties</h5>
					<button type="button" class="close closeEditModalButton" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					@Html.HiddenFor(model => model.MediaIDTO.MediaId, new { @id="input-edit-mediaId" })
					@Html.TextBoxFor(model => model.MediaIDTO.MetaTitle, new { @id="input-edit-title", @class = "form-control mb-3", placeholder = "Meta Title" })
					@Html.TextBoxFor(model => model.MediaIDTO.MetaDescription, new { @id="input-edit-desc", @class = "form-control mb-3", placeholder = "Meta Description" })
					@Html.TextBoxFor(model => model.MediaIDTO.AltTitle, new { @id="input-edit-alt", @class = "form-control mb-3", placeholder = "Alt Title" })
				</div>
				<div class="modal-footer">
					<input type="submit" class="btn btn-dotnet" value="Save" />
					<button type="button" class="btn btn-secondary closeEditModalButton" data-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	}
</div>

<div id="delete-image-modal" class="modal fade" tabindex="-1" role="dialog">
	@using (Html.BeginForm("DeleteMeidaImage", "Dashboard", FormMethod.Post))
	{
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Delete Image?</h5>
					<button type="button" class="close closeDeleteModalButton" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<p id="delete-message"></p>
					@Html.HiddenFor(model => model.MediaIDTO.MediaId, new { @id="input-delete-mediaId" })
				</div>
				<div class="modal-footer">
					<input type="submit" class="btn btn-dotnet" value="Delete" />
					<button type="button" class="btn btn-secondary closeDeleteModalButton" data-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	}
</div>

@section Scripts{
	<script>
		toggleLoading();

		let data = @Json.Serialize(Model.MediaList);
		console.log(data);
		$(document).ready(function () {
			let edit_buttons = document.getElementsByClassName("fa-edit");
			for (let i = 0; i < edit_buttons.length; i++) {
				edit_buttons[i].addEventListener("click", function () {
					let mediaId = this.dataset.mediaId;
					const media = data.find(obj => obj.mediaId == mediaId);
					
					$("#input-edit-mediaId").val(mediaId);
					$("#input-edit-title").val(media.metaTitle);
					$("#input-edit-desc").val(media.metaDescription);
					$("#input-edit-alt").val(media.AltTitle);
					$("#edit-image-modal").modal("toggle");
				});
			}

			let delete_buttons = document.getElementsByClassName("fa-trash");
			for (let i = 0; i < delete_buttons.length; i++) {
				delete_buttons[i].addEventListener("click", function () {
					let mediaId = this.dataset.mediaId;
					let mediaTitle = this.dataset.mediaTitle;

					$("#input-delete-mediaId").val(mediaId);
					$("#delete-message").html(`Do you want to delete "${mediaTitle}" image?`)
					$("#delete-image-modal").modal("toggle");
				});
			}

			$(".closeEditModalButton").click(function () {
				$('#edit-image-modal').modal('hide');
			});

			$(".closeDeleteModalButton").click(function () {
				$('#delete-image-modal').modal('hide');
			});

			setTimeout(() => { toggleLoading() }, 700)
		});
	</script>
}