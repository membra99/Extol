@model List<Universal.DTO.ODTO.SiteContentODTO>

@{
	ViewData["Title"] = "All SiteContents";
}

@if (ViewBag.siteType == "Page")
{
	<button type="button" class="btn btn-dotnet" id="addPageButton" style="margin-bottom:15px;">Add New Page</button>
}
else
{
	<button type="button" class="btn btn-dotnet" id="addBlogButton" style="margin-bottom:15px;">Add New Blog</button>
}
<div class="col-12">
	<table id="siteContentTable" class="table table-striped display text-center w-100">
		<thead>
			<tr>
				<th>Title</th>
				<th>MediaId</th>
				<th>SeoId</th>
				<th>TagId</th>
				<th>Content</th>
				<th>IsActive</th>
			</tr>
		</thead>
		<tbody>
		</tbody>
	</table>
</div>


@section Scripts
	{
	<script>
		toggleLoading();
		$(document).ready(function () {

			let isPaginate = false;
			let dataTable = null;

			const urlParams = new URLSearchParams(window.location.search);
			const type = urlParams.get('type');

			const defaultLangID = 1;

			console.log(type);

			$(document).on('click', '#addPageButton', function () {
				window.location.href = '/Dashboard/PostSiteContent?siteContentType=' + 3;
			});

			$(document).on('click', '#addBlogButton', function () {
				window.location.href = '/Dashboard/PostSiteContent?siteContentType=' + 4;
			});


			function loadData(type, langID) {
				console.log(type, langID);
				$.ajax({
					url: '/api/SiteContent/AllByType',
					method: 'GET',
					data: { type: type, langID: langID },
					dataType: 'json',
					success: function (data) {
						isPaginate = data.length > 10 ? true : false;

						if (dataTable) {
							dataTable.destroy();
						}

						dataTable = $('#siteContentTable').DataTable({
							data: data,
							scrollX: true,
							columns: [
								{ data: "title" },
								{ data: "mediaId" },
								{ data: "seoId" },
								{ data: "tagId" },
								{ data: "content" },
								{ data: "isActive" },
							],
							columnDefs: [
								{ targets: '_all', className: 'dt-left' }
							],
							bPaginate: isPaginate,
							initComplete: function (settings, json) {
								toggleLoading();
							}
						});
					},
					error: function (error) {
						console.error('Error loading data: ' + JSON.stringify(error));
					}
				});
			}

			$('#language').on('change', function () {
				const selectedLangID = $(this).val();
				loadData(type, selectedLangID);
			});


			loadData(type, defaultLangID);

		});
	</script>
}